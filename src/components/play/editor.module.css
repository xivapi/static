@value controlBorderRadius: 0.25rem;
@value controlBorderWidth: 1px;

.group {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.group.nest {
  position: relative;
  padding-left: calc(1rem + 2px);
}

.group.nest::after {
  content: '';
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0.5rem;
  width: 2px;
  height: 100%;
  background-color: var(--sl-color-gray-5);
}

.group.nest:hover::after {
  background-color: var(--sl-color-text-accent)
}

.group .row {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
}

.delete {
  flex-shrink: 0;
  flex-grow: 0;
  width: 2rem;
  height: 2rem;
}

.actions {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
}

.actions.padded {
  padding-left: calc(2rem + 0.5rem);
}

.groupEntry {
  flex-grow: 1;
  display: flex;
}

.control {
  position: relative;
  z-index: 0;
  height: 2rem;
  border: controlBorderWidth solid var(--sl-color-gray-3);
  background-color: var(--sl-color-gray-6);
}

.control:hover {
  z-index: 1;
  border-color: var(--sl-color-gray-1);
}

.control.invalid {
  z-index: 2;
  color: var(--sl-badge-danger-text);
  border-color: var(--sl-badge-danger-border);
  background-color: var(--sl-badge-danger-bg);
}

.control + .control {
  margin-left: calc(-1 * controlBorderWidth);
}

.control:first-child {
  border-top-left-radius: controlBorderRadius;
  border-bottom-left-radius: controlBorderRadius;
}

.control:last-child {
  border-top-right-radius: controlBorderRadius;
  border-bottom-right-radius: controlBorderRadius;
}
